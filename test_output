TranslationUnitDecl
├─ NamespaceDecl <line:5:0, line:7:8> ns
│  ╰─ FunctionDecl <line:6:0, line:6:76> report_assertion_failure 'void (char const *, char const *, char const *, int)'
│     ├─ ParamVarDecl <line:6:30, line:6:41> char const *
│     ├─ ParamVarDecl <line:6:44, line:6:55> char const *
│     ├─ ParamVarDecl <line:6:58, line:6:69> char const *
│     ╰─ ParamVarDecl <line:6:72, line:6:74> int
╰─ FunctionDecl <line:3:0, line:11:32> main 'int (int, char * *)'
   ├─ ParamVarDecl <line:3:9, line:3:16> argc int
   ├─ ParamVarDecl <line:3:19, line:3:29> argv char * *
   ╰─ CompoundStmt <line:3:0, line:11:32>
      ├─ IfStmt <line:5:2, line:8:9> has_else
      │  ├─ BinaryOpExpr <line:5:6, line:5:15> '=='
      │  │  ├─ BinaryOpExpr <line:5:6, line:5:10> '+'
      │  │  │  ├─ LitteralExpr <line:5:6, line:5:6> Int(1, I32)
      │  │  │  ╰─ LitteralExpr <line:5:10, line:5:10> Int(1, I32)
      │  │  ╰─ LitteralExpr <line:5:15, line:5:15> Int(0, I32)
      │  ├─ CompoundStmt <line:5:2, line:6:18>
      │  ╰─ CompoundStmt <line:6:2, line:8:9>
      │     ╰─ ReturnStmt <line:7:4, line:7:21>
      │        ╰─ LitteralExpr <line:7:11, line:7:20> Int(1298731982, I32)
      ├─ NullStmt <line:8:3, line:8:3>
      ╰─ ReturnStmt <line:10:2, line:10:15>
         ╰─ BinaryOpExpr <line:10:9, line:10:14> '+'
            ├─ LitteralExpr <line:10:9, line:10:9> Int(1, I32)
            ╰─ UnaryOpExpr <line:10:13, line:10:14> '-'
               ╰─ LitteralExpr <line:10:14, line:10:14> Int(1, I32)
